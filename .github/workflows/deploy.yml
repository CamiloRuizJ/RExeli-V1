name: Deploy to Vercel

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run type-check

    - name: Build project
      run: npm run build
      env:
        # Encrypted environment variables for build process
        ENCRYPTED_OPENAI_API_KEY: ${{ secrets.ENCRYPTED_OPENAI_API_KEY }}
        ENCRYPTED_SUPABASE_URL: ${{ secrets.ENCRYPTED_SUPABASE_URL }}
        ENCRYPTED_SUPABASE_ANON_KEY: ${{ secrets.ENCRYPTED_SUPABASE_ANON_KEY }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

    - name: Deploy to Vercel (Production)
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

    - name: Deploy to Vercel (Preview)
      if: github.event_name == 'pull_request'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./

    - name: Update deployment status
      if: success()
      run: |
        echo "üöÄ Deployment successful!"
        echo "üîê Authentication system: ENABLED"
        echo "üîë API keys: ENCRYPTED"
        echo "‚úÖ Production ready"